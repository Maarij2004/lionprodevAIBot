{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lionprodev\\\\frontend\\\\lionprodev\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptArea, setPromptArea] = useState('');\n  const [chatHistory, setChatHistory] = useState([{\n    sender: 'bot',\n    message: 'مرحبًا! 👋\\nعادةً ما نرد في غضون بضع دقائق.'\n  } // Initial greeting in Arabic\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null); // Reference for auto-scrolling\n\n  // Auto-scroll to the bottom whenever the chatHistory changes\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  const handleSubmit = async () => {\n    const userMessage = promptArea.trim();\n    if (!userMessage) return;\n\n    // Add user's message to chat history\n    setChatHistory(prev => [...prev, {\n      sender: 'user',\n      message: userMessage\n    }]);\n    setPromptArea(''); // Clear the input after submitting\n    setIsLoading(true); // Start loading\n\n    const url = 'http://localhost:3050/api/prompt'; // Your API endpoint\n    let tmpPromptResponse = '';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: userMessage\n        })\n      });\n      if (!response.body) throw new Error('No response body');\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        tmpPromptResponse += decoder.decode(value, {\n          stream: true\n        });\n      }\n\n      // Translate the response to Arabic before showing it\n      const translatedResponse = await translateToArabic(tmpPromptResponse);\n\n      // Once the full response is received and translated, update the state\n      setChatHistory(prev => [...prev, {\n        sender: 'bot',\n        message: translatedResponse\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setChatHistory(prev => [...prev, {\n        sender: 'bot',\n        message: 'حدث خطأ في التواصل مع الخادم.'\n      } // Error message in Arabic\n      ]);\n    } finally {\n      setIsLoading(false); // End loading\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault(); // Prevent default behavior of Enter key (adding new line)\n      handleSubmit();\n    }\n  };\n\n  // Function to simulate translation to Arabic (Replace this with an actual API)\n  const translateToArabic = async text => {\n    // Simulating translation (you can replace this logic with an API like Google Translate)\n    let translatedText = text;\n\n    // Perform basic clean-up to ensure no unwanted characters (e.g., Chinese or English) remain\n    // Here, we are ensuring only Arabic text is retained\n    translatedText = translatedText.replace(/[^ا-ي\\s]/g, ''); // Remove non-Arabic characters\n\n    return translatedText; // Return the cleaned Arabic translation\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    dir: \"rtl\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0627\\u0644\\u062F\\u0631\\u062F\\u0634\\u0629 \\u0645\\u0639 \\u0627\\u0644\\u0630\\u0643\\u0627\\u0621 \\u0627\\u0644\\u0627\\u0635\\u0637\\u0646\\u0627\\u0639\\u064A \\u0627\\u0644\\u062E\\u0627\\u0635 \\u0628\\u0646\\u0627\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender}`,\n            dangerouslySetInnerHTML: {\n              __html: msg.message\n            } // Render message with HTML (line breaks)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-textarea\",\n          rows: 2,\n          placeholder: \"\\u0627\\u0643\\u062A\\u0628 \\u0631\\u0633\\u0627\\u0644\\u062A\\u0643...\",\n          onChange: e => setPromptArea(e.target.value),\n          value: promptArea,\n          onKeyDown: handleKeyPress // Listen for Enter key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSubmit,\n          disabled: isLoading,\n          children: isLoading ? 'جاري الإرسال...' : 'إرسال'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"4vAQ1SfeYg5wVqtyEbo4YgFmPx8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","promptArea","setPromptArea","chatHistory","setChatHistory","sender","message","isLoading","setIsLoading","messagesEndRef","current","scrollIntoView","behavior","handleSubmit","userMessage","trim","prev","url","tmpPromptResponse","response","fetch","method","headers","body","JSON","stringify","prompt","Error","reader","getReader","decoder","TextDecoder","value","done","read","decode","stream","translatedResponse","translateToArabic","error","console","handleKeyPress","e","key","shiftKey","preventDefault","text","translatedText","replace","className","dir","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","dangerouslySetInnerHTML","__html","ref","rows","placeholder","onChange","target","onKeyDown","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Lionprodev/frontend/lionprodev/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [promptArea, setPromptArea] = useState('');\n    const [chatHistory, setChatHistory] = useState([\n        { sender: 'bot', message: 'مرحبًا! 👋\\nعادةً ما نرد في غضون بضع دقائق.' }, // Initial greeting in Arabic\n    ]);\n    const [isLoading, setIsLoading] = useState(false);\n    const messagesEndRef = useRef(null); // Reference for auto-scrolling\n\n    // Auto-scroll to the bottom whenever the chatHistory changes\n    useEffect(() => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [chatHistory]);\n\n    const handleSubmit = async () => {\n        const userMessage = promptArea.trim();\n        if (!userMessage) return;\n\n        // Add user's message to chat history\n        setChatHistory((prev) => [\n            ...prev,\n            { sender: 'user', message: userMessage },\n        ]);\n        setPromptArea(''); // Clear the input after submitting\n        setIsLoading(true); // Start loading\n\n        const url = 'http://localhost:3050/api/prompt'; // Your API endpoint\n        let tmpPromptResponse = '';\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ prompt: userMessage }),\n            });\n\n            if (!response.body) throw new Error('No response body');\n\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n\n            while (true) {\n                const { value, done } = await reader.read();\n                if (done) break;\n\n                tmpPromptResponse += decoder.decode(value, { stream: true });\n            }\n\n            // Translate the response to Arabic before showing it\n            const translatedResponse = await translateToArabic(tmpPromptResponse);\n\n            // Once the full response is received and translated, update the state\n            setChatHistory((prev) => [\n                ...prev,\n                { sender: 'bot', message: translatedResponse },\n            ]);\n        } catch (error) {\n            console.error('Error:', error);\n            setChatHistory((prev) => [\n                ...prev,\n                { sender: 'bot', message: 'حدث خطأ في التواصل مع الخادم.' }, // Error message in Arabic\n            ]);\n        } finally {\n            setIsLoading(false); // End loading\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault(); // Prevent default behavior of Enter key (adding new line)\n            handleSubmit();\n        }\n    };\n\n    // Function to simulate translation to Arabic (Replace this with an actual API)\n    const translateToArabic = async (text) => {\n        // Simulating translation (you can replace this logic with an API like Google Translate)\n        let translatedText = text;\n\n        // Perform basic clean-up to ensure no unwanted characters (e.g., Chinese or English) remain\n        // Here, we are ensuring only Arabic text is retained\n        translatedText = translatedText.replace(/[^ا-ي\\s]/g, ''); // Remove non-Arabic characters\n\n        return translatedText; // Return the cleaned Arabic translation\n    };\n\n    return (\n        <div className=\"chat-container\" dir=\"rtl\"> {/* Set direction to right-to-left for Arabic */}\n            <div className=\"chat-card\">\n                <div className=\"chat-header\">\n                    <h2>الدردشة مع الذكاء الاصطناعي الخاص بنا</h2> {/* Header in Arabic */}\n                </div>\n                <div className=\"chat-box\">\n                    <div className=\"messages\">\n                        {chatHistory.map((msg, index) => (\n                            <div\n                                key={index}\n                                className={`message ${msg.sender}`}\n                                dangerouslySetInnerHTML={{ __html: msg.message }} // Render message with HTML (line breaks)\n                            >\n                            </div>\n                        ))}\n                        <div ref={messagesEndRef} /> {/* Scroll reference */}\n                    </div>\n                </div>\n                <div className=\"chat-input\">\n                    <textarea\n                        className=\"input-textarea\"\n                        rows={2}\n                        placeholder=\"اكتب رسالتك...\"\n                        onChange={(e) => setPromptArea(e.target.value)}\n                        value={promptArea}\n                        onKeyDown={handleKeyPress} // Listen for Enter key\n                    />\n                    <button className=\"send-button\" onClick={handleSubmit} disabled={isLoading}>\n                        {isLoading ? 'جاري الإرسال...' : 'إرسال'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}