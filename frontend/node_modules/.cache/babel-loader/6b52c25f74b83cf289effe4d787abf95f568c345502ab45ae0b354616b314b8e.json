{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lionprodev\\\\frontend\\\\lionprodev\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptArea, setPromptArea] = useState('');\n  const [promptResponse, setPromptResponse] = useState('');\n  const handleSubmit = async () => {\n    const url = 'http://localhost:3050/api/prompt';\n    let tmpPromptResponse = '';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: promptArea\n        })\n      });\n      if (!response.body) throw new Error('No response body');\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        tmpPromptResponse += decoder.decode(value, {\n          stream: true\n        });\n        setPromptResponse(tmpPromptResponse);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setPromptResponse('Error communicating with the server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chatbot-header\",\n        children: \"Chat with Our AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatbot-textarea\",\n        rows: 10,\n        placeholder: \"Type your question here...\",\n        onChange: e => setPromptArea(e.target.value),\n        value: promptArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-button-clear\",\n          onClick: () => {\n            setPromptArea('');\n            setPromptResponse('');\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-response-text\",\n          children: promptResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"aRlOLoZ+k15sEuOwjH/dVNsJRRM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","promptArea","setPromptArea","promptResponse","setPromptResponse","handleSubmit","url","tmpPromptResponse","response","fetch","method","headers","body","JSON","stringify","prompt","Error","reader","getReader","decoder","TextDecoder","value","done","read","decode","stream","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Lionprodev/frontend/lionprodev/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './Chatbot.css';\n\nfunction App() {\n    const [promptArea, setPromptArea] = useState('');\n    const [promptResponse, setPromptResponse] = useState('');\n\n    const handleSubmit = async () => {\n        const url = 'http://localhost:3050/api/prompt';\n        let tmpPromptResponse = '';\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ prompt: promptArea }),\n            });\n\n            if (!response.body) throw new Error('No response body');\n\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n\n            while (true) {\n                const { value, done } = await reader.read();\n                if (done) break;\n\n                tmpPromptResponse += decoder.decode(value, { stream: true });\n                setPromptResponse(tmpPromptResponse);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setPromptResponse('Error communicating with the server.');\n        }\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <div className=\"chatbot-card\">\n                <h2 className=\"chatbot-header\">Chat with Our AI</h2>\n                <textarea\n                    className=\"chatbot-textarea\"\n                    rows={10}\n                    placeholder=\"Type your question here...\"\n                    onChange={(e) => setPromptArea(e.target.value)}\n                    value={promptArea}\n                ></textarea>\n                <div className=\"chatbot-buttons\">\n                    <button className=\"chatbot-button\" onClick={handleSubmit}>\n                        Submit\n                    </button>\n                    <button\n                        className=\"chatbot-button-clear\"\n                        onClick={() => {\n                            setPromptArea('');\n                            setPromptResponse('');\n                        }}\n                    >\n                        Clear\n                    </button>\n                </div>\n                <div className=\"chatbot-response\">\n                    <h3>Response:</h3>\n                    <div className=\"chatbot-response-text\">{promptResponse}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,kCAAkC;IAC9C,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;QAC9BI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEd;QAAW,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACI,IAAI,EAAE,MAAM,IAAII,KAAK,CAAC,kBAAkB,CAAC;MAEvD,MAAMC,MAAM,GAAGT,QAAQ,CAACI,IAAI,CAACM,SAAS,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;MAEjC,OAAO,IAAI,EAAE;QACT,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAG,MAAML,MAAM,CAACM,IAAI,CAAC,CAAC;QAC3C,IAAID,IAAI,EAAE;QAEVf,iBAAiB,IAAIY,OAAO,CAACK,MAAM,CAACH,KAAK,EAAE;UAAEI,MAAM,EAAE;QAAK,CAAC,CAAC;QAC5DrB,iBAAiB,CAACG,iBAAiB,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BtB,iBAAiB,CAAC,sCAAsC,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9B/B,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB/B,OAAA;QAAI8B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDnC,OAAA;QACI8B,SAAS,EAAC,kBAAkB;QAC5BM,IAAI,EAAE,EAAG;QACTC,WAAW,EAAC,4BAA4B;QACxCC,QAAQ,EAAGC,CAAC,IAAKnC,aAAa,CAACmC,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;QAC/CA,KAAK,EAAEpB;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACZnC,OAAA;QAAK8B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B/B,OAAA;UAAQ8B,SAAS,EAAC,gBAAgB;UAACW,OAAO,EAAElC,YAAa;UAAAwB,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnC,OAAA;UACI8B,SAAS,EAAC,sBAAsB;UAChCW,OAAO,EAAEA,CAAA,KAAM;YACXrC,aAAa,CAAC,EAAE,CAAC;YACjBE,iBAAiB,CAAC,EAAE,CAAC;UACzB,CAAE;UAAAyB,QAAA,EACL;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B/B,OAAA;UAAA+B,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBnC,OAAA;UAAK8B,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAE1B;QAAc;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjC,EAAA,CAlEQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}