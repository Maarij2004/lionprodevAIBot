{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lionprodev\\\\frontend\\\\lionprodev\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptArea, setPromptArea] = useState('');\n  const [chatHistory, setChatHistory] = useState([{\n    sender: 'bot',\n    arabic: 'مرحبًا 👋\\nنرد عادةً خلال دقائق.'.replace(/\\n/g, '<br />'),\n    english: 'Hi there 👋\\nWe typically reply within a few minutes.'.replace(/\\n/g, '<br />'),\n    isArabic: true\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  const handleSubmit = async () => {\n    const userMessage = promptArea.trim();\n    if (!userMessage) return;\n    setChatHistory(prev => [...prev, {\n      sender: 'user',\n      message: userMessage\n    }]);\n    setPromptArea('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:3050/api/prompt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: userMessage\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      const isPromptArabic = data.prompt_language === 'ar';\n      setChatHistory(prev => [...prev, {\n        sender: 'bot',\n        arabic: data.arabic.replace(/\\n/g, '<br />'),\n        english: data.english.replace(/\\n/g, '<br />'),\n        isArabic: isPromptArabic // show response in prompt language first\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setChatHistory(prev => [...prev, {\n        sender: 'bot',\n        arabic: 'حدث خطأ في الاتصال بالخادم.'.replace(/\\n/g, '<br />'),\n        english: 'Error communicating with the server.'.replace(/\\n/g, '<br />'),\n        isArabic: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n  const toggleLanguage = index => {\n    setChatHistory(prev => prev.map((msg, i) => i === index && msg.sender === 'bot' ? {\n      ...msg,\n      isArabic: !msg.isArabic\n    } : msg));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat with Our AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender}`,\n            children: msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: msg.isArabic ? msg.arabic : msg.english\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"translate-button\",\n                onClick: () => toggleLanguage(index),\n                children: msg.isArabic ? 'Translate to English' : 'ترجمة إلى العربية'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-textarea\",\n          rows: 2,\n          placeholder: \"Type your message...\",\n          onChange: e => setPromptArea(e.target.value),\n          value: promptArea,\n          onKeyDown: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSubmit,\n          disabled: isLoading,\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"alz8q0aVrvHLpXPyR48EsPECj2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","promptArea","setPromptArea","chatHistory","setChatHistory","sender","arabic","replace","english","isArabic","isLoading","setIsLoading","messagesEndRef","current","scrollIntoView","behavior","handleSubmit","userMessage","trim","prev","message","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","error","Error","isPromptArabic","prompt_language","console","handleKeyPress","e","key","shiftKey","preventDefault","toggleLanguage","index","map","msg","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","ref","rows","placeholder","onChange","target","value","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["D:/Lionprodev/frontend/lionprodev/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [promptArea, setPromptArea] = useState('');\n    const [chatHistory, setChatHistory] = useState([\n        { \n          sender: 'bot', \n          arabic: 'مرحبًا 👋\\nنرد عادةً خلال دقائق.'.replace(/\\n/g, '<br />'), \n          english: 'Hi there 👋\\nWe typically reply within a few minutes.'.replace(/\\n/g, '<br />'), \n          isArabic: true \n        },\n    ]);\n    const [isLoading, setIsLoading] = useState(false);\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [chatHistory]);\n\n    const handleSubmit = async () => {\n        const userMessage = promptArea.trim();\n        if (!userMessage) return;\n\n        setChatHistory((prev) => [\n            ...prev,\n            { sender: 'user', message: userMessage }\n        ]);\n        setPromptArea('');\n        setIsLoading(true);\n\n        try {\n            const response = await fetch('http://localhost:3050/api/prompt', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ prompt: userMessage }),\n            });\n\n            const data = await response.json();\n\n            if (data.error) throw new Error(data.error);\n\n            const isPromptArabic = data.prompt_language === 'ar';\n\n            setChatHistory((prev) => [\n                ...prev,\n                {\n                    sender: 'bot',\n                    arabic: data.arabic.replace(/\\n/g, '<br />'),\n                    english: data.english.replace(/\\n/g, '<br />'),\n                    isArabic: isPromptArabic, // show response in prompt language first\n                }\n            ]);\n        } catch (error) {\n            console.error('Error:', error);\n            setChatHistory((prev) => [\n                ...prev,\n                { \n                    sender: 'bot', \n                    arabic: 'حدث خطأ في الاتصال بالخادم.'.replace(/\\n/g, '<br />'), \n                    english: 'Error communicating with the server.'.replace(/\\n/g, '<br />'), \n                    isArabic: true \n                }\n            ]);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n        }\n    };\n\n    const toggleLanguage = (index) => {\n        setChatHistory((prev) =>\n            prev.map((msg, i) =>\n                i === index && msg.sender === 'bot'\n                    ? { ...msg, isArabic: !msg.isArabic }\n                    : msg\n            )\n        );\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-card\">\n                <div className=\"chat-header\">\n                    <h2>Chat with Our AI</h2>\n                </div>\n                <div className=\"chat-box\">\n                    <div className=\"messages\">\n                        {chatHistory.map((msg, index) => (\n                            <div key={index} className={`message ${msg.sender}`}>\n                                {msg.sender === 'bot' ? (\n                                    <>\n                                        <div\n                                            dangerouslySetInnerHTML={{\n                                                __html: msg.isArabic ? msg.arabic : msg.english,\n                                            }}\n                                        />\n                                        <button\n                                            className=\"translate-button\"\n                                            onClick={() => toggleLanguage(index)}\n                                        >\n                                            {msg.isArabic ? 'Translate to English' : 'ترجمة إلى العربية'}\n                                        </button>\n                                    </>\n                                ) : (\n                                    <div>{msg.message}</div>\n                                )}\n                            </div>\n                        ))}\n                        <div ref={messagesEndRef} />\n                    </div>\n                </div>\n                <div className=\"chat-input\">\n                    <textarea\n                        className=\"input-textarea\"\n                        rows={2}\n                        placeholder=\"Type your message...\"\n                        onChange={(e) => setPromptArea(e.target.value)}\n                        value={promptArea}\n                        onKeyDown={handleKeyPress}\n                    />\n                    <button\n                        className=\"send-button\"\n                        onClick={handleSubmit}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'Sending...' : 'Send'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}