{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lionprodev\\\\frontend\\\\lionprodev\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [promptArea, setPromptArea] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async () => {\n    const url = 'http://localhost:3050/api/prompt';\n    let tmpPromptResponse = '';\n\n    // Add user message to the chat\n    const userMessage = {\n      text: promptArea,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setPromptArea('');\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: promptArea\n        })\n      });\n      if (!response.body) throw new Error('No response body');\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        tmpPromptResponse += decoder.decode(value, {\n          stream: true\n        });\n        setMessages(prevMessages => [...prevMessages, {\n          text: tmpPromptResponse,\n          sender: 'bot'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages([...messages, {\n        text: 'Error communicating with the server.',\n        sender: 'bot'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chatbot-header\",\n        children: \"Chat with Our AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatbot-textarea\",\n        rows: 10,\n        placeholder: \"Type your question here...\",\n        onChange: e => setPromptArea(e.target.value),\n        value: promptArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-button-clear\",\n          onClick: () => {\n            setPromptArea('');\n            setMessages([]);\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-response\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${msg.sender === 'user' ? 'chatbot-response-user' : 'chatbot-response-bot'}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vLtkM4GdTE5m0s/B3Dl9drXpW2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","promptArea","setPromptArea","messages","setMessages","handleSubmit","url","tmpPromptResponse","userMessage","text","sender","response","fetch","method","headers","body","JSON","stringify","prompt","Error","reader","getReader","decoder","TextDecoder","value","done","read","decode","stream","prevMessages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["D:/Lionprodev/frontend/lionprodev/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [promptArea, setPromptArea] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const handleSubmit = async () => {\n        const url = 'http://localhost:3050/api/prompt';\n        let tmpPromptResponse = '';\n\n        // Add user message to the chat\n        const userMessage = { text: promptArea, sender: 'user' };\n        setMessages([...messages, userMessage]);\n        setPromptArea('');\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ prompt: promptArea }),\n            });\n\n            if (!response.body) throw new Error('No response body');\n\n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n\n            while (true) {\n                const { value, done } = await reader.read();\n                if (done) break;\n\n                tmpPromptResponse += decoder.decode(value, { stream: true });\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { text: tmpPromptResponse, sender: 'bot' }\n                ]);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setMessages([...messages, { text: 'Error communicating with the server.', sender: 'bot' }]);\n        }\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <div className=\"chatbot-card\">\n                <h2 className=\"chatbot-header\">Chat with Our AI</h2>\n                <textarea\n                    className=\"chatbot-textarea\"\n                    rows={10}\n                    placeholder=\"Type your question here...\"\n                    onChange={(e) => setPromptArea(e.target.value)}\n                    value={promptArea}\n                ></textarea>\n                <div className=\"chatbot-buttons\">\n                    <button className=\"chatbot-button\" onClick={handleSubmit}>\n                        Submit\n                    </button>\n                    <button\n                        className=\"chatbot-button-clear\"\n                        onClick={() => {\n                            setPromptArea('');\n                            setMessages([]);\n                        }}\n                    >\n                        Clear\n                    </button>\n                </div>\n                <div className=\"chatbot-response\">\n                    {messages.map((msg, index) => (\n                        <div\n                            key={index}\n                            className={`${\n                                msg.sender === 'user' ? 'chatbot-response-user' : 'chatbot-response-bot'\n                            }`}\n                        >\n                            {msg.text}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}